// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Post = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Post'
  /** Le titre de l'article */
  title: string
  /** La date de publication de l'article */
  date: IsoDateTimeString
  /** Une courte description de l'article */
  description: string
  /** L'image de couverture de l'article */
  image?: string | undefined
  /** La catégorie de l'article */
  category: 'plomberie' | 'electricite' | 'peinture' | 'jardinage' | 'diy' | 'actu-maison'
  /** Les tags de l'article */
  tags?: string[] | undefined
  /** L'auteur de l'article */
  author: string
  /** Le temps de lecture estimé en minutes */
  readingTime?: number | undefined
  /** Article mis en avant */
  featured: boolean
  /** Markdown file body */
  body: Markdown
  url: string
  slug: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Post
export type DocumentTypeNames = 'Post'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allPosts: Post[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Post: Post
}

export type NestedTypeMap = {

}

 